#!/usr/bin/env perl
use strict;
use warnings;
use File::Path ('remove_tree');
use File::Copy;

# using parts of http://www.users.on.net/~bkgunther/software/multipartforms.html

my(%FORM,@NAMES,$n);
$FORM{'engine'}="pdflatex";

my($tmpdir);
#   $tmpdir="/tmp/latexcgi-$$";
    $tmpdir="/tmp/latexcgi";
mkdir($tmpdir, 0777) unless (-d $tmpdir);


sub parseform
{
    my ($inform,$boundary,$errstr,$name,$value,$skipblank,$getvalue,
	$fnum,$fh,$document);
    $errstr="";
    $skipblank=0;
    $fnum=0;

    
    if(defined $ENV{'REQUEST_METHOD'} && $ENV{'REQUEST_METHOD'} eq 'POST' &&
       $ENV{'CONTENT_TYPE'} =~ /multipart\/form-data;\s*boundary=(\S+)/i ) {
	$boundary = $1;
	$inform=0;
	#    print "Content-Type: text/plain; charset=utf-8\n\n";
	#    print "Good form type\n";
	#    print "bdry", $boundary;
    } else {
	print "Content-Type: text/plain; charset=utf-8\n\n";
	print "Bad form type\n";
	exit;
    }
    
    if($ENV{'CONTENT_LENGTH'} > 10000) {
	print "Content-Type: text/plain; charset=utf-8\n\n";
	print "Form data too large\n";
	exit;
    }
    
    
    while (<>) {
	if (!$inform) {
	    $inform = /^--$boundary/;
	} else {
	    if($skipblank) {
		if(/^\r\n$/) {
		    $skipblank=0;
		    $getvalue=1;
		} else {
		    $errstr="Unexpected Form Structure";
		    last;
		}
	    } elsif ($getvalue){
		if($name eq 'filecontents[]') {
		    if(/^--$boundary/) {
			close FH;
			$getvalue=0;
		    } else {
			s/\r\n$//;
			print FH "$_\n";
		    }
		} elsif(/(.*)\r\n$/) {
		    if($name eq 'filename[]') {
			push(@NAMES,$1);
		    } else {
			$FORM{$name} = $1;
		    }
		    $getvalue=0;
		}
	    }
	    if (/content-disposition:\s*form-data;\s*name=\"([^\"]*)\"/i) {
		if (/filename=\"([^\"]*)\"/i) {
		    $errstr="File Upload not supported";
		    last;
		}
		$name = $1;
		$value = '';
		if($name eq "filecontents[]") {
		    $fnum = $fnum + 1;
		    open (FH , ">", "/tmp/latexcgi/f$fnum");
		    $skipblank=1;
		} elsif ($name eq "filename[]") {
		    $skipblank=1;
		} elsif ($name eq "engine") {
		    $skipblank=1;
		} else {
		    $errstr="Unexpected param: " . $name;
		}
	    } else {
	    }
	}
    }

    if(scalar(@NAMES) == $fnum) {
	my $i=0;
	$document=0;
	for $n (@NAMES) {
	    $i = $i + 1;
	    $document=1 if $n eq "document.tex";
	    rename($tmpdir . "/f" . $i, $tmpdir . "/" . $n);
	}
    } else {
	$errstr = "Bad Form: mismatched filenames";
    }

    if($document==0) {
	$errstr = "Bad Form: no main document";
    }

    $errstr = "Unknown Engine $FORM{'engine'}" unless  ($FORM{'engine'} =~ /^(lua|pdf|xe|up|p)latex$/);
    
    if ($errstr ne "") {
	print "Content-Type: text/plain; charset=utf-8\n\n";
	print "Bad form type\n";
	print $errstr;
	exit;
    } else {
	# debugreturn();
	 dolatex()
    }
}

sub debugreturn {
    print "Content-Type: text/plain; charset=utf-8\n\n";
    print "Form good\n";
    print "Engine: " . $FORM{'engine'} . "\n";
    print "filenames\n";
    foreach $n (@NAMES) {
	print "  $n\n";
    }
}


sub dolatex () {
    chdir($tmpdir);
    $ENV{'PATH'}="/usr/local/texlive/2020/bin/x86_64-linux:" . $ENV{'PATH'};
    system("$FORM{'engine'} document >out.txt 2>&1");
    move($tmpdir . "/document.pdf","/var/www/html/latexcgi/document" . "$$" . ".pdf");
    print "Location: /latexcgi/document" . "$$" . ".pdf\n\n";
#    print "Content-Type: text/plain; charset=utf-8\n\n";
#    print "PATH: " .  $ENV{'PATH'} . "\n";
#    print "Status: $!\n";
    	
}
    

parseform();
